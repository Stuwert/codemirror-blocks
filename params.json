{"name":"codemirror-blocks","tagline":"A library for making functional languages editable using visual blocks inside of codemirror","body":"[![Build Status](https://travis-ci.org/bootstrapworld/codemirror-blocks.svg?branch=master)](https://travis-ci.org/bootstrapworld/codemirror-blocks)\r\n[![Coverage Status](https://coveralls.io/repos/bootstrapworld/codemirror-blocks/badge.svg?branch=master&service=github)](https://coveralls.io/github/bootstrapworld/codemirror-blocks?branch=master)\r\n\r\n# codemirror-blocks\r\nA library for making functional languages editable using visual blocks inside of codemirror\r\n\r\n## Usage\r\n\r\n1. Install this library with npm:\r\n\r\n        npm install --save codemirror-blocks\r\n\r\n2. Install the peer dependencies:\r\n\r\n        npm install --save babel-polyfill codemirror\r\n\r\n3. Make sure `babel-polyfill` is required at the top of your entry point:\r\n\r\n        require('babel-polyfill')\r\n\r\n4. Hook it up:\r\n\r\n        import CodeMirror from 'CodeMirror'\r\n        import CodeMirrorBlocks from 'codemirror-blocks'\r\n        import MyParser from './MyParser.js' //See example/parser.js for an example\r\n\r\n        // feel free to include the example css, or roll your own!\r\n        require('codemirror-blocks/example/example.css')\r\n\r\n        let cm = CodeMirror.fromTextArea(document.getElementById('mytextarea'))\r\n        let blocks = new CodeMirrorBlocks(cm, new MyParser())\r\n        blocks.setBlockMode(true)\r\n\r\n## Development\r\n\r\nTo get your dev environment up and running, follow these steps\r\n\r\n1. Checkout the repository in your favorite manner\r\n\r\n2. install dependencies with npm\r\n\r\n        npm install\r\n\r\n3. start the webpack development server:\r\n\r\n        npm start\r\n\r\n4. browse to http://localhost:8080/webpack-dev-server/ and fire away!\r\n\r\n5. while you work, be sure to continuously run the unit tests with:\r\n\r\n        npm run test-watch\r\n\r\nLibrary code is in the **src/** directory. An example of how it should be used\r\nis in the **example/** directory.\r\n\r\n6. documentation can be generated from the source code by running:\r\n\r\n        npm run docs\r\n\r\n## Updating demo on project site\r\n\r\nTo update the demo on the project site with the latest version of the example in\r\nthis repository, just run:\r\n\r\n    ./deploy-example.sh\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}